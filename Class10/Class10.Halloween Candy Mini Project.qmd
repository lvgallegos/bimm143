---
title: "Class10.Halloween Candy Mini Project"
author: "Lidia Gallegos"
format: pdf
always_allow_html: true 
---

## Background

Here we go explore 538 Halloween candy data. They recently ran a rather large poll to determine which candy their readers like best. From their website: "While we don't know who exactly voted, we do know this: 8,371 different IP addresses voted on about 269,000 randomly generated candy match-ups".

```{r}
candy_file <- "candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

## Winpercent

One of the most interesting variables in the dataset is 'winpercent'. For a given candy this value is the percentage of people who prefer this candy over another randomly chosen candy from the dataset (what 538 term a matchup). Higher values indicate a more popular candy.

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it's winpercent value?

```{r}
rownames(candy)
```

```{r}
candy["Almond Joy",]$winpercent
```

> Q4. What is the winpercent value for "Kit Kat"?

```{r}
candy["Kit Kat",]$winpercent
```

> Q5. What is the winpercent value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

## A useful function from the skimr package

There is a useful skim() function in the skimr package that can help give you a quick overview of a given dataset.

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The chocolate column seems to be on a different scale of just zeros and ones as opposed to the other columns.

```{r}
candy$chocolate
```

> Q7. What do you think a zero and one represent for the candy\$chocolate column?

I think a zero indicates that the candy is not a chocolate while a one indicates that the camdy is a chocolate, almost like a "True or False".

```{r}
candy$chocolate
```

> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent,)
```

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent) +
  geom_histogram(bins=10, col="red", fill="orange")
```

> Q9. Is the distribution of winpercent values symmetrical?

The distribution of winpercent values is somewhat symmetrical, but not quite.

> Q10. Is the center of the distribution above or below 50%?

The center of the distribution is above 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate.inds <- as.logical(candy$chocolate)
chocolate.wins <- candy[chocolate.inds,]$winpercent
mean(chocolate.wins)
```

```{r}
fruity.inds <- as.logical(candy$fruity)
fruity.wins <- candy[fruity.inds,]$winpercent
mean(fruity.wins)
```

On average, the chocolate candy is ranked higher than fruit candy.

> Q12. Is this difference statistically significant?

Since p-value = 2.871e-08, this difference is statistically significant.

```{r}
t.test(chocolate.wins, fruity.wins)
```

## Candy Ranking

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}

```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"

my_cols
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols)
```

```{r}
ggsave("tmp.png")
```

> Q17. What is the worst ranked chocolate candy?

```{r}

```

> Q18. What is the best ranked fruity candy?

```{r}

```

## Taking a look at pricepercent

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's miniatures are the highest ranked in terms of winpercent for the least money.

```{r}
library(ggrepel)

# plot of price vs win...who will be the winner? 
# we use 'geom_text_repel' to repel the labels and prevent overlap 
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=4, max.overlaps = 5)
```

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

The least popular of these is Nik L Lip.

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

## Exploring the correlation structure

We'll use correlation and view the results with the corrplot package to plot a correlation matrix.

```{r}
# install.packages("corrplot") first
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and Fruity variables are anti-correlated.

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent variables are most posotively correlated.

## Principal Component Analysis

Let's apply PCA using the 'prcomp()' function to our candy dataset remembering to set the 'scale=TRUE' argument because the 'winpercent' and 'pricepercent' values are on a different scale.

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2])
```

Changing the plotting character and adding some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

Make a prettier plot with the ggplot2 package!

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Use the ggrepel package and the function 'ggrepel::geom_text_repel()' to label up the plot without overlapping candy names (add a title and subtitle too):

```{r}
library(ggrepel)

p + geom_text_repel(size=2.8, col=my_cols, max.overlaps = 10)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

*Pass the ggplot object 'p' to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
# First install.packages("plotly")
library(plotly)

ggplotly(p)
```

Let's look at PCA of our loadings...

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction?

The original variables picked up strongly by PC1 in the positive direction are Fruity, Hard and Pluribus. 
